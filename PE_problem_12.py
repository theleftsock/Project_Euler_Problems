__author__ = 'zog'

"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle
number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
"""
# this is a test comment for pushing to the repo

from project_euler_libs import *

triang_num = 1
idx = 0
max_divs = 0
while (1):
    pfs = prime_factors(triang_num)
    divs = get_divisors(triang_num, pfs)
    #print "and the divs",divs

    #print "triangle_number:",triang_num,"div_count:",len(divs)
    if (len(divs) > 500):
        print "triang_num:",triang_num
        print divs
        break
    if (len(divs) > max_divs):
        max_divs = len(divs)
        print "max_divs:",max_divs
    if (idx % 1000 == 0):
        print "idx:",idx
    idx = idx + 1
    triang_num = triang_num + idx